openapi: 3.0.2
info:
  description: 接口文档
  title: API Title
  version: "1.0"
servers:
- url: https://api.server.test/v1
tags:
- name: question
paths:
  /questions:
    get:
      description: 获取题目
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Question'
                type: array
          description: ok
      tags:
      - question
    post:
      description: 新增题目
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        "200":
          description: ok
      tags:
      - question
  /questions/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          description: ok
    get:
      description: 获取一道题
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ok
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        "200":
          description: ok
  /questions/{id}/answers/:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Answer'
                type: array
          description: ok
    patch:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Answer'
              type: array
      responses:
        "200":
          description: ok
    post:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Answer'
              type: array
      responses:
        "200":
          description: ok
  /questions/{id}/answers/{answerId}:
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      - explode: false
        in: path
        name: answerId
        required: true
        schema:
          $ref: '#/components/schemas/ID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
      responses:
        "200":
          description: ok
components:
  schemas:
    ID:
      type: integer
    Question:
      example:
        question: question
        answers:
        - id: 6
          content: content
        - id: 6
          content: content
        answerIds:
        - 1
        - 1
        id: 0
      properties:
        id:
          type: integer
        question:
          type: string
        answers:
          items:
            $ref: '#/components/schemas/Answer'
          type: array
        answerIds:
          items:
            type: integer
          type: array
      type: object
    Answer:
      example:
        id: 6
        content: content
      properties:
        id:
          type: integer
        content:
          type: string
      type: object

