syntax = "proto3";

package lottery.template;


import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "utils/paginate.proto";

import "lottery/lottery.proto";

option go_package = "lottery.template";

// https://github.com/grpc-ecosystem/grpc-gateway/blob/main/examples/internal/proto/examplepb/a_bit_of_everything.proto#L19C99
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  schemes: HTTPS;
  host: "api.zuoyinyun.com";
  security_definitions: {
    security: {
      key: "OAuth2";
      value: {
        type: TYPE_OAUTH2;
        flow: FLOW_ACCESS_CODE;
        authorization_url: "https://example.com/oauth/authorize";
        token_url: "https://example.com/oauth/token";
        scopes: {
          scope: {
            key: "login";
          }
        }
      }
    }
  }
};

service TemplateService {
  rpc List(ListRequest) returns (ListResponse) {
    option (google.api.http) = {
      get: "/lottery.template.TemplateService/templates"
    };
  }
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/lottery.template.TemplateService/templates/{id}"
    };
  }
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/lottery.template.TemplateService/templates",
      body: "*"
    };
  }
  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (google.api.http) = {
      put: "/lottery.template.TemplateService/templates/{id}",
      body: "*"
    };
  }
  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (google.api.http) = {
      delete: "/lottery.template.TemplateService/templates/{id}",
    };
  }
}

message Template {
  int32 id = 1;
  int32 lottery_id = 2;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}
message NewTemplate {
  int32 lottery_id = 1;
}
message TemplateWithLottery {
  Template template = 1;
  lottery.Lottery lottery = 2;
}
message Favorite {
  int32 id = 1;
  string user_id = 2;
  int32 lottery_id = 3;
}
message NewFavorite {
  string user_id = 1;
  int32 lottery_id = 2;
}
message FavoriteWithLottery {
  int32 id = 1;
  string user_id = 2;
  int32 lottery_id = 3;
  lottery.Lottery lottery = 4;
}

message ListRequest {
  utils.paginate.Paginate paginate = 1;
}
message ListResponse {
  repeated TemplateWithLottery templates = 1;
  utils.paginate.Paginated paginated = 2;
}

message GetRequest {
  int32 id = 1;
}
message GetResponse {
  Template template = 1;
}

message CreateRequest {
  NewTemplate template = 1;
}
message CreateResponse {
  Template template = 1;
}

message UpdateRequest {
  int32 id = 1;
  NewTemplate template = 2;
}
message UpdateResponse {
  Template template = 1;
}

message DeleteRequest {
  int32 id = 1;
}
message DeleteResponse {
}
